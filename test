import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { forkJoin } from 'rxjs';
import { ICategory } from '@apiModel/ICategory';
import { IThread } from '@apiModel/IThread';
import { IUser } from '@apiModel/IUser';
import { environment } from 'environments/environment';

@Injectable({
  providedIn: 'root'
})
export class RouteGenerationService {

  constructor(private http: HttpClient) { }

  generateRoutesAndPrerender(): void {
    // Fetch dynamic data from API
    const categoryNames$ = this.http.get<ICategory[]>(environment.baseUrl + "Categorie/getAll");
    const threadTitles$ = this.http.get<IThread[]>(environment.baseUrl + "Thread/getAll");
    const usernames$ = this.http.get<IUser[]>(environment.baseUrl + "User/getAll");

    // Once all API calls are completed
    forkJoin([categoryNames$, threadTitles$, usernames$]).subscribe(([categories, threads, users]) => {
      const categoryRoutes = categories.map(category => `category/${category.name}`);
      const threadRoutes = threads.map(thread => `thread/${thread.title}`);
      const userRoutes = users.map(user => `user/${user.username}`);

      const allRoutes = [...categoryRoutes, ...threadRoutes, ...userRoutes];

      this.writeRoutesToFile(allRoutes);
      // Trigger Angular build or prerendering process here
    });
  }

  writeRoutesToFile(routes: string[]): void {
    // Write routes to routes.txt file
    const routesFileContent = routes.join('\n');
    // Logic to write to file (e.g., using Node.js fs module or Angular HttpClient to write to a file on the server)
  }
}
